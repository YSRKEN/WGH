/* 時間関係 */
#module Date
	// コンストラクタ
	#deffunc initDate
		// 月を経過日数に変換するための表
		dim yearplus,13,2
		yearplus( 0,0)=   0 :yearplus( 0,1)=   0
		yearplus( 1,0)=  31 :yearplus( 1,1)=  31
		yearplus( 2,0)=  59 :yearplus( 2,1)=  60
		yearplus( 3,0)=  90 :yearplus( 3,1)=  91
		yearplus( 4,0)= 120 :yearplus( 4,1)= 121
		yearplus( 5,0)= 151 :yearplus( 5,1)= 152
		yearplus( 6,0)= 181 :yearplus( 6,1)= 182
		yearplus( 7,0)= 212 :yearplus( 7,1)= 213
		yearplus( 8,0)= 243 :yearplus( 8,1)= 244
		yearplus( 9,0)= 273 :yearplus( 9,1)= 274
		yearplus(10,0)= 304 :yearplus(10,1)= 305
		yearplus(11,0)= 334 :yearplus(11,1)= 335
		yearplus(12,0)= 365 :yearplus(12,1)= 366
		// 年を経過日数に変換するための表
		dim year_offset, 2100
		for k, 1, 2100
			leap_flg = (k \ 4 == 0) - (k \ 100 == 0) + (k \ 400 == 0)
			year_offset(k) = year_offset(k - 1) + 365 + leap_flg
		next
	return
	// 年月日を「日」に変換
	#defcfunc cnvFloatDay int year_, int month_, int day_
		leap_flg = (year_ \ 4 == 0) - (year_ \ 100 == 0) + (year_ \ 400 == 0)
	return year_offset(year_ - 1) + yearplus(month_ - 1, leap_flg) + day_
	// 時分秒ミリ秒を「日」に変換
	#defcfunc cnvFloatSec int hour_, int minute_, int second_, int milli_
	return ((((1.0 * milli_ / 1000) + second_) / 60 + minute_) / 60 + hour_) / 24
	// 現在時刻を「日」に変換
	#defcfunc getFloatTime
		float_time_day = cnvFloatDay(gettime(0), gettime(1), gettime(3))
		float_time_sec = cnvFloatSec(gettime(4), gettime(5), gettime(6), gettime(7))
	return 1.0 * float_time_day + float_time_sec
	// 「日」を現在時刻(配列)に変換
	#deffunc cnvValTime double float_time_, array time_value_
		float_day = int(float_time_)
		// 年を特定する
		for k, 1, 2100
			if(year_offset(k) >= float_day){
				time_value_(0) = k
				float_day -= year_offset(k - 1)
				leap_flg = (k \ 4 == 0) - (k \ 100 == 0) + (k \ 400 == 0)
				_break
			}
		next
		// 月を特定する
		for k, 1, 12 + 1
			if(yearplus(k, leap_flg) >= float_day){
				time_value_(1) = k
				float_day -= yearplus(k - 1, leap_flg)
				_break
			}
		next
		// 日
		time_value_(2) = float_day
		// 時
		float_sec = float_time_ - double(int(float_time_))
		float_sec *= 24
		hour = int(float_sec)
		time_value_(3) = hour
		float_sec -= double(hour)
		// 分
		float_sec *= 60
		minute = int(float_sec)
		time_value_(4) = minute
		float_sec -= double(minute)
		// 秒
		float_sec *= 60
		second = int(float_sec + 0.5)
		time_value_(5) = second
		float_sec -= double(second)
	return
	// 「日」を現在時刻(文字列)に変換
	#defcfunc cnvStrDate double float_time_
		dim time_value, 6
		cnvValTime float_time_, time_value
	return strf("%04d/%02d/%02d %02d:%02d:%02d", time_value(0), time_value(1), time_value(2), time_value(3), time_value(4), time_value(5))
	// 「日」を現在時刻(文字列)に変換
	#defcfunc cnvStrTime double float_time_
		dim time_value, 6
		cnvValTime float_time_, time_value
	return strf("%02d:%02d:%02d", time_value(3), time_value(4), time_value(5))
#global
