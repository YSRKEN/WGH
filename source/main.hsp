#define global SOFT_NAME "WGH"
#packopt name SOFT_NAME

#module GetPic
	#uselib "gdi32.dll"
		#func  BitBlt "BitBlt" int,int,int,int,int,int,int,int,int
		#cfunc CreateDC "CreateDCA" sptr,sptr,sptr,int
		#func  DeleteDC "DeleteDC" int
	#uselib "user32.dll"
		#cfunc GetSystemMetrics "GetSystemMetrics" int
		#cfunc WindowFromPoint "WindowFromPoint" int, int
		#func  GetWindowRect "GetWindowRect" int, int
		#cfunc GetWindowDC "GetWindowDC" int
		#func  ReleaseDC "ReleaseDC" int, int
	// API関係の定数
	#const NULL 0
	#const SRCCOPY    0x00CC0020
	#const CAPTUREBLT 0x40000000
	#const SM_XVIRTUALSCREEN  0x0000004C
	#const SM_YVIRTUALSCREEN  0x0000004D
	#const SM_CXVIRTUALSCREEN 0x0000004E
	#const SM_CYVIRTUALSCREEN 0x0000004F
	// API関係ではない定数
	#const RECT_SIZE 4
	#const VIRTUAL_SCREEN_ID 10
	#const CLICK_SCREEN_ID   11
	#const TEMP_BUFFER_ID    12
	// GetPicモジュールを初期化
	#deffunc initGetPic
		// 仮想画面の左上座標および大きさを取得
		virtual_screen_px = GetSystemMetrics(SM_XVIRTUALSCREEN)
		virtual_screen_py = GetSystemMetrics(SM_YVIRTUALSCREEN)
		virtual_screen_wx = GetSystemMetrics(SM_CXVIRTUALSCREEN)
		virtual_screen_wy = GetSystemMetrics(SM_CYVIRTUALSCREEN)
	return
	// クリックした画面を捕捉する
	#deffunc getWindowPositionByClick
		// 仮想画面全体をスクショして、縁無しウィンドウ表示する
		buffer VIRTUAL_SCREEN_ID, virtual_screen_wx, virtual_screen_wy
		hdc_screen = CreateDC("DISPLAY", NULL, NULL, NULL)
		BitBlt hdc, 0, 0, virtual_screen_wx, virtual_screen_wy, hdc_screen, virtual_screen_px, virtual_screen_py, SRCCOPY | CAPTUREBLT
		DeleteDC hdc_screen
		bgscr CLICK_SCREEN_ID, virtual_screen_wx, virtual_screen_wy,,virtual_screen_px, virtual_screen_py
		gcopy VIRTUAL_SCREEN_ID, 0, 0, virtual_screen_wx, virtual_screen_wy
		// 戦艦少女のウィンドウをクリックさせる
		;dialog "戦艦少女の画面をクリックしてください.", 0, SOFT_NAME
		repeat
			stick key
			if(key & 256){
				window_position_x = mousex + virtual_screen_px
				window_position_y = mousey + virtual_screen_py
				break
			}
			wait 5
		loop
		gsel CLICK_SCREEN_ID, -1
		// クリック位置から対象のウィンドウのハンドル・位置・サイズを取得する
		window_handle = WindowFromPoint(window_position_x, window_position_y)
		dim rect, RECT_SIZE
		GetWindowRect window_handle, varptr(rect)
		window_px = rect(0)
		window_py = rect(1)
		window_wx = rect(2) - rect(0)
		window_wy = rect(3) - rect(1)
	return
	// 捕捉した画面を保存する
	#deffunc saveWindowImage
		buffer TEMP_BUFFER_ID, window_wx, window_wy
		hdc_window = GetWindowDC(window_handle)
		BitBlt hdc, 0, 0, window_wx, window_wy, hdc_window, 0, 0, SRCCOPY | CAPTUREBLT
		ReleaseDC window_handle, hdc_window
		bmpsave "cap.bmp"
	return
#global

initGetPic
getWindowPositionByClick
saveWindowImage
end
