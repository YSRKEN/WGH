/* 各種タイマー関係 */
#module Timer
	#const EXP_LIST_HEIGHT 4	//遠征画面のリストの縦の長さ
	#const TIMER_DIGIT_COUNT 6	//タイマーの数字の数(桁)
	#const FLEET_SIZE 4			//艦隊数
	// コンストラクタ
	#deffunc initTimer
		// 「艦隊派遣」ボタンの位置および大きさ
		can_exp_button_px = 81.43
		can_exp_button_py.0 = 8.996,29.92,50.63,71.55
		can_exp_button_wx = 11.16
		can_exp_button_wy = 5.230
		// 遠征時間表示の位置および大きさ
		exp_timer_px.0 = 60.89,62.63,65.45,67.10,69.80,71.56
		exp_timer_py.0 = 5.858,26.57,47.49,68.41
		exp_timer_wx = 1.645
		exp_timer_wy = 4.184
		// 保持する時間表記
		ddim exp_timer, FLEET_SIZE
	return
	// 時間データを修正
	#deffunc fixTime array timer_digit_
		timer_digit_(0) = limit(timer_digit_(0), 0, 1)
		timer_digit_(2) = limit(timer_digit_(2), 0, 5)
		timer_digit_(4) = limit(timer_digit_(4), 0, 5)
	return
	// 遠征タイマーを取得
	#deffunc getExpeditionTimer
		gsel SHOT_BUFFER_ID
		;bmpsave "hoge.bmp"
		// どの位置に遠征アイコンが立っているかを検出する
		dim exp_flg, EXP_LIST_HEIGHT
		for ei, 0, EXP_LIST_HEIGHT
			getDifferenceHash ahash, SHOT_BUFFER_ID, can_exp_button_px, can_exp_button_py(ei), can_exp_button_wx, can_exp_button_wy
			// 「艦隊派遣」ボタンが出ていれば、そこでは遠征されていない
			if(getHummingDistance(ahash, $a65452d5, $d8545548) >= 20){
				exp_flg(ei) = TRUE
			}else{
				exp_flg(ei) = FALSE
			}
		next
		// 立っている遠征について、遠征時間を計測する
		now_time = getFloatTime()
		sdim output_timer, 1024
		for ei, 0, EXP_LIST_HEIGHT
			if(exp_flg(ei) == FALSE) :exp_timer(ei) = -1.0 :_continue
			dim timer_digit, TIMER_DIGIT_COUNT
			getTimerOCR timer_digit, SHOT_BUFFER_ID, exp_timer_px, exp_timer_py(ei), exp_timer_wx, exp_timer_wy, 140, TRUE
			fixTime timer_digit
			exp_timer(ei) = now_time + cnvFloatSec(timer_digit(0) * 10 + timer_digit(1), timer_digit(2) * 10 + timer_digit(3), timer_digit(4) * 10 + timer_digit(5))
			output_timer += "[" + ei + "] "
			output_timer += "" + cnvStrDate(exp_timer(ei)) + " " + cnvStrTime(exp_timer(ei) - now_time)
			output_timer += "\n"
		next
		logmes output_timer
	return
#global
