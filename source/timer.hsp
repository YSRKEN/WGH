/* 各種タイマー関係 */
#module Timer
	#const EXP_LIST_HEIGHT 4	//遠征画面のリストの縦の長さ
	#const TIMER_DIGIT_COUNT 6	//タイマーの数字の数(桁)
	#const FLEET_SIZE 4			//艦隊数
	// コンストラクタ
	#deffunc initTimer
		// 「艦隊派遣」ボタンの位置および大きさ
		can_exp_button_px = 81.43
		can_exp_button_py.0 = 8.996,29.92,50.63,71.55
		can_exp_button_wx = 11.16
		can_exp_button_wy = 5.230
		// 艦隊番号アイコンの位置および大きさ
		exp_fleet_number_px = 86.37
		exp_fleet_number_py.0 = 6.695, 27.41, 48.33, 69.25
		exp_fleet_number_wx = 0.9401
		exp_fleet_number_wy = 2.301
		// 遠征時間表示の位置および大きさ
		exp_timer_px.0 = 60.89,62.63,65.45,67.10,69.80,71.56
		exp_timer_py.0 = 5.858,26.57,47.49,68.41
		exp_timer_wx = 1.645
		exp_timer_wy = 4.184
		// 保持する時間表記
		ddim exp_timer, FLEET_SIZE
		for fi, 0, FLEET_SIZE
			exp_timer(fi) = -1.0
		next
	return
	// 時間データを修正
	#deffunc fixTime array timer_digit_
		timer_digit_(0) = limit(timer_digit_(0), 0, 1)
		timer_digit_(2) = limit(timer_digit_(2), 0, 5)
		timer_digit_(4) = limit(timer_digit_(4), 0, 5)
	return
	// 遠征タイマーを取得
	#deffunc getExpeditionTimer
		gsel SHOT_BUFFER_ID
		;bmpsave "hoge.bmp"
		// どの位置に遠征アイコンが立っているかを検出する
		dim exp_flg, EXP_LIST_HEIGHT
		for ei, 0, EXP_LIST_HEIGHT
			getDifferenceHash ahash, SHOT_BUFFER_ID, can_exp_button_px, can_exp_button_py(ei), can_exp_button_wx, can_exp_button_wy
			// 「艦隊派遣」ボタンが出ていれば、そこでは遠征されていない
			if(getHummingDistance(ahash, $a65452d5, $d8545548) >= 20){
				exp_flg(ei) = TRUE
			}else{
				exp_flg(ei) = FALSE
			}
		next
		// 立っている遠征について、遠征時間・遠征艦隊番号を読み込む
		now_time = getFloatTime()
		for ei, 0, EXP_LIST_HEIGHT
			if(exp_flg(ei) == FALSE) :_continue
			// 遠征時間
			dim timer_digit, TIMER_DIGIT_COUNT
			getTimerOCR timer_digit, SHOT_BUFFER_ID, exp_timer_px, exp_timer_py(ei), exp_timer_wx, exp_timer_wy, 140, TRUE
			fixTime timer_digit
			// 遠征艦隊番号
			getDifferenceHash ahash, SHOT_BUFFER_ID, exp_fleet_number_px, exp_fleet_number_py(ei), exp_fleet_number_wx, exp_fleet_number_wy
			fleet_number = judgeExpFleets(ahash)
			;logmes "" + fleet_number + " " + hashToStr(ahash)
			if(fleet_number < 0) :fleet_number = 0
			// 読み込み処理
			exp_timer(fleet_number) = now_time + cnvFloatSec(timer_digit(0) * 10 + timer_digit(1), timer_digit(2) * 10 + timer_digit(3), timer_digit(4) * 10 + timer_digit(5))
		next
	return
	// 各種タイマーを更新
	#deffunc redrawTimers
		timer_message@GUI = "【遠征艦隊】\n"
		now_time = getFloatTime()
		for fi, 0, FLEET_SIZE
			timer_message@GUI += str(fi + 1) + "→"
			if(exp_timer(fi) < 0.0){
				timer_message@GUI += "00:00:00\n"
			}else{
				time_diff = exp_timer(fi) - now_time
				if(time_diff < 0.0){
					exp_timer(fi) = -1.0
					timer_message@GUI += "00:00:00\n"
				}else{
					timer_message@GUI += cnvStrTime(time_diff) + "\n"
				}
			}
		next
		gsel TIMER_WINDOW_ID@GUI
		objprm timer_message_id@GUI, timer_message@GUI
		resetCurrentWindow
	return
#global
