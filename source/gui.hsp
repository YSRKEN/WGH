/* GUI関係 */
#module GUI
	// ウィンドウID
	#const MAIN_WINDOW_ID 0
	#const WINDOW_ID_MAX MAIN_WINDOW_ID
	// オブジェクトサイズ
	#const OBJ_X 64
	#const OBJ_Y 24
	#const OBJ_SPACE 10
	#define ctype POS_X(%1) (OBJ_X * (%1) + OBJ_SPACE * ((%1) + 1))
	#define ctype POS_Y(%1) (OBJ_Y * (%1) + OBJ_SPACE * ((%1) + 1))
	#define ctype SIZE_X(%1) (OBJ_X * (%1) + OBJ_SPACE * ((%1) - 1))
	#define ctype SIZE_Y(%1) (OBJ_Y * (%1) + OBJ_SPACE * ((%1) - 1))
	// API
	#const WM_NCLBUTTONDOWN $000000A1
	#const HTCAPTION 2
	#const EM_SCROLL 0xB5
	#const SB_BOTTOM 0x07
	#const WM_COMMAND $111
	#const BM_GETCHECK $F0
	// GUIを初期化
	#deffunc initGUI
		dim hwnd_window

		// メイン画面
		// ウィンドウを設置
		screen MAIN_WINDOW_ID, POS_X(3), POS_Y(5)
		hwnd_window(MAIN_WINDOW_ID) = hwnd
		gsel MAIN_WINDOW_ID, 2
		title SOFT_NAME
		// ボタンなどのオブジェクトを設置
		pos POS_X(0), POS_Y(0)
			objsize SIZE_X(2), OBJ_Y
			button gosub "座標取得", *getWPBC
			button_getwpbc_id = stat
		pos POS_X(2), POS_Y(0)
			objsize OBJ_X, OBJ_Y
			button gosub "ソフト情報", *showInfo
		pos POS_X(0), POS_Y(1)
			objsize OBJ_X, OBJ_Y
			button gosub "画像保存", *savePicture
		pos POS_X(1), POS_Y(1)
			objsize POS_X(3) - OBJ_X - OBJ_Y - OBJ_SPACE * 4, OBJ_Y
			chkbox "Twitter用に保存", twitter_flg@Config
			chkbox_twitter_id = stat
		pos POS_X(3) - OBJ_Y - OBJ_SPACE, POS_Y(1)
			objsize OBJ_Y, OBJ_Y
			button gosub "開", *openPictureFloder
		pos POS_X(0), POS_Y(2)
			sdim log_message, 32768
			mesbox log_message, SIZE_X(3), SIZE_Y(3), 4
			mesbox_log_id = stat
	return
	// ログに追加
	#deffunc addMessage str message_
		// ログに追記
		log_message += getNowTimeSmallStr() + " " + message_ + "\n"
		// 追記した内容を画面に反映し、ついでにスクロールを掛ける
		gsel MAIN_WINDOW_ID, 2
		objprm mesbox_log_id, log_message
		sendmsg objinfo(mesbox_log_id, 2), EM_SCROLL, SB_BOTTOM, 0
	return
*getWPBC
	if(getWindowPositionByClick()){
		gsel MAIN_WINDOW_ID
		objprm button_getwpbc_id, "(" + window_px@GetPic + "," + window_py@GetPic + ") " + window_wx@GetPic + "x" + window_wy@GetPic
		addMessage "座標取得完了."
		addMessage "左上座標：(" + window_px@GetPic + "," + window_py@GetPic + ")"
		addMessage "画面サイズ：" + window_wx@GetPic + "x" + window_wy@GetPic
	}else{
		addMessage "エラー：座標取得に失敗しました."
	}
	return
*showInfo
	// ソフト情報を表示する処理
	dialog "ソフト名：" + SOFT_NAME + "\nバージョン：" + SOFT_VER + "\n最終更新日：" + SOFT_TIME + "\n作者：YSR"
	return
*savePicture
	// スクショを保存する処理
	save_file_name = saveWindowImage()
	if(save_file_name != ""){
		addMessage "スクショを保存しました."
		addMessage save_file_name
	}else{
		addMessage "エラー：座標を取得できていません."
	}
	return
*openPictureFloder
	// 画像の保存フォルダをエクスプローラで開く処理
	exec "explorer.exe " + pic_path@
	addMessage "保存フォルダを開く..."
	return
*move
	// ウィンドウをドラッグ可能にする処理
	if(wparam != 1) :return
	if(ginfo_act <= WINDOW_ID_MAX){
		sendmsg hwnd_window(ginfo_act), WM_NCLBUTTONDOWN, HTCAPTION, 0
	}
return
*action_object
	if(lparam == objinfo(chkbox_twitter_id, 2)){
		// 「Twitter用に保存」チェックボックスのチェック状態を表示
		// chkbox命令にチェック状態が反映される前なので、sendmsg命令を活用する
		sendmsg lparam, BM_GETCHECK, 0, 0
		if(stat){
			addMessage "Twitter用に保存：ON"
		}else{
			addMessage "Twitter用に保存：OFF"
		}
	}
return
#global
onclick gosub *move@GUI
oncmd gosub *action_object@GUI, WM_COMMAND@GUI
